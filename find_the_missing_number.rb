def find_number(start, stop, string)
  
  range_hash = (start..stop).to_a.join.chars.sort.tally
  string_hash = string.chars.sort.tally
  missing_elements = []

  range_hash.each do |element, count|
    if string_hash[element].nil? || string_hash[element] < count
      (count - string_hash[element].to_i).times { missing_elements << element}
    end
  end

  missing_elements
  p missing_int_arr = missing_elements.permutation.to_a.map {|arr| arr.join.to_i}.uniq.reject {|num| num < start || num > stop}
  p missing_elements.length
  final_arr = missing_int_arr.reject {|int| int.digits.count != missing_elements.length}

end

# on 9-27 figure out why some answers aren't good even though they fall between the start and stop values

p find_number(611, 1195, "117568181311037459676139007056797501185716854998936846110762710148841116823648103598072264186111267027551033695119484411508601172113610221038103294211551184935114311021020896116211048636786526157211013670995929100193310156366531152926117767610936827116121089845769985663793632875642116665071587673698411681002991643109594083111518399739598199479161005107790579110908706301019691115775311491124975802675701614990801106291378711586576969816661118107593711678787438907379586207137607981117955903109788011739718258417448228271009112092085367165478163810361187103465182071786811467738047516891119895109470095085864997411218891065104511088527647717629191139698724893767100377598890610556357821147672836108811131114618116010968061176738814776108183266810491024634667740899102682610106291127904949727855656761871897964106010181059918978114410768038821169109162493480799410581016733102375710701048100865984011916971099708931113763394487711901145694811105295176577711701069108781080881510579929978297181164107990710831078856756100068411921031908104311341040113810067201163799102886465592786689164679497673980564774911051054774619107481811426231041639779106111109321051925626954849112596075888611359728481128729883892103096297086710631101963754956103978011899798379868796459467831027112264411837461141797703784658785887113010981050834816687772706104285772311009411174108010671053103777872610071186111274711569381044102968094561187473511798309616909936777047149489019837667637488288506317121178628110610258518248431056112311811109707709114810821161108489473068572868878693910461180741999734113210861131812114010921133914683902796662821673115411296606178659239877957199281188835111598962587291591192173111119431159809770800930106496999662185983810668889821085898118291095210686168477921072101769278864091283392410217258857906998696868621073752968637953101176884292278910128739171004710966909115375910716226939651165881957119581773211716749776656697426616641193")
#p find_number(5, 10, "578910")
#p find_number(1, 21, "2198765123416171890101112131415")
#p find_number(1, 250, "2491771842155490223116351359624312364528611014378220168235412194624714016711713319814428177371372322483356775157513821213812018915616178169180422057425055702049257200441752021649520319463179155401482271358391661117611818617619918524622611214787196431912247122923132852316022867242822118221107236471216824475181150239121712918214915910923798652331532147215125222170494190146216102161182971832061006216327616919791582131417224013622832171920823414111920188116842613237131811954516213053245241210105361242183110491312860155099247920710123810311423018722589102126931061741129193139134341491423011512712511380881921451541731651085920912215220148")
#p find_number(7, 16, "131214115178910")
#p find_number(27, 285, "27539771292001472344716922427827498158250173271508210418927726113846219163131100167401703420727612320226728015241106117185150190270180109156151247291111451652812819322251242184284532382538313961266195257217932271321212154823117218636522727520126843872602052399723016670176586786212146259255321228120423511966241213124114695417512711314811216818149283194198197144192248711573196651022449226220315591126731602454489243211183103216107254273130178206182154421163390453022638801992108427108252269128232196187208240141142209188766478591106326413716223724928216113360258791531059512057628813411817910199228171159246279225136263191852142331643735177174681497455218135125265251220562562367222122914322328594115")